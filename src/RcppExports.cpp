// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// SumSingle
int SumSingle(List modelList, NumericVector testData);
RcppExport SEXP _LMboost_SumSingle(SEXP modelListSEXP, SEXP testDataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type modelList(modelListSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type testData(testDataSEXP);
    rcpp_result_gen = Rcpp::wrap(SumSingle(modelList, testData));
    return rcpp_result_gen;
END_RCPP
}
// VoteSingle
int VoteSingle(List modelList, NumericVector testData);
RcppExport SEXP _LMboost_VoteSingle(SEXP modelListSEXP, SEXP testDataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type modelList(modelListSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type testData(testDataSEXP);
    rcpp_result_gen = Rcpp::wrap(VoteSingle(modelList, testData));
    return rcpp_result_gen;
END_RCPP
}
// WeightedVotesSingle
int WeightedVotesSingle(List modelList, NumericVector testData, List Weights, double totalweight);
RcppExport SEXP _LMboost_WeightedVotesSingle(SEXP modelListSEXP, SEXP testDataSEXP, SEXP WeightsSEXP, SEXP totalweightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type modelList(modelListSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type testData(testDataSEXP);
    Rcpp::traits::input_parameter< List >::type Weights(WeightsSEXP);
    Rcpp::traits::input_parameter< double >::type totalweight(totalweightSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedVotesSingle(modelList, testData, Weights, totalweight));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LMboost_SumSingle", (DL_FUNC) &_LMboost_SumSingle, 2},
    {"_LMboost_VoteSingle", (DL_FUNC) &_LMboost_VoteSingle, 2},
    {"_LMboost_WeightedVotesSingle", (DL_FUNC) &_LMboost_WeightedVotesSingle, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_LMboost(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
